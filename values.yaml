global:
  storageClass:
  imagePullSecrets: []

secretsManager:
  bankVault:
    enabled: false
    ## Banzaicloud bank-vaults mutating webhook annotations
    ## https://banzaicloud.com/docs/bank-vaults/mutating-webhook/annotations/
    annotations:
      vault.security.banzaicloud.io/vault-addr: "https://vault:8200"

## @param nameOverride String to partially override nginx.fullname template (will maintain the release name)
##
nameOverride:

## @param fullnameOverride String to fully override nginx.fullname template
##
fullnameOverride:

## @param commonLabels Add labels to all the deployed resources
##
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}

## App image version
## @param image.registry app image registry
## @param image.repository app image repository
## @param image.tag app image tag (immutable tags are recommended)
## @param image.pullPolicy app image pull policy
##
image:
  repository: registry.hub.docker.com
  tag:
  pullPolicy: Always

## @param replicaCount Number of app replicas to deploy
##
replicaCount: 1

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for app pod
  ##
  create: false
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the `names.fullname` template
  name:
  ## @param serviceAccount.annotations Annotations for service account. Evaluated as a template.
  ## Only used if `create` is `true`.
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Auto-mount the service account token in the pod
  ##
  automountServiceAccountToken: true

revisionHistoryLimit: 5

## @param terminationGracePeriodSeconds In seconds, time the given to the app pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: 60

## Configures the ports app listens on
## @param containerPort Sets http port inside app container
##
containerPort: 8080

## @param extraContainerPorts - Extra ports to expose in the container
## extraContainerPorts:
##   - name: http
##     containerPort: 9090
##     protocol: TCP
extraContainerPorts:

service:
  ## @param service.type Service type
  ##
  type: ClusterIP
  ## @param service.targetPort Service container port
  ##
  targetPort: 8080
  ## @param service.port Service port
  ##
  port: 8080
  ## @param service.annotations Service annotations
  ##
  annotations: {}
  ## @param service.extraPorts - Extra ports to expose in the service (normally used with the `sidecar` value)
  ##
  extraPorts:

ingress:
  enabled: false
  annotations: {}

  path: / # Default path for extraHosts

  hosts:
    - host: common.example.com
      paths:
        - /
  #tls:
  #  - secretName: tls-secret-name
  #    hosts:
  #      - common.example.com

  ## @param ingress.pathType - Ingress Path type
  ##
  pathType: ImplementationSpecific

  ## @param ingress.extraHosts - The list of additional hostnames to be covered with this ingress record.
  ## extraHosts:
  ## - name: test2.example.com
  ##   path: /
  ##
  extraHosts: []

  ## @param ingress.extraTls - The tls configuration for additional hostnames to be covered with this ingress record.
  ## extraTls:
  ## - hosts:
  ##     - test2.example.com
  ##   secretName: tls-secret-name-2
  ##
  extraTls: []

  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName:

livenessProbe: {}
readinessProbe: {}

resources: {}
#  limits:
#    cpu: 200m
#    memory: 256Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

nodeSelector: []

tolerations: []

affinity: {}

## @param env - Array containing env vars to configure service
##
## Default envs example:
## env:
##   - name: DATABASE_URL
##     value: "mysql://127.0.0.1:3306"
##   - name: LOG_LEVEL
##     value: "debug"
##
## Secrets from Vault example:
## env
##   - name: DB_PASSWORD
##     value: "vault:secrets/data/database#DB_PASSWORD"
##   - name: AUTH_TOKEN
##     value: "vault:secrets/data/example#AUTH_TOKEN"
##
env:

## @param envFromCm - Array containing env vars to configure service
##
envFromCm:
  enabled: false

## @param configMapFile - Filename or matching wildcard pattern
## For example:
## configMapFile: "application.yml"
## 
## or multiple files:
## configMapFile: "**.json"
##
## Before using this param, you need to COPY all files into "config/" chart directory
##
## For example in CI/CD:
## cp src/main/resources/application.yml common-app-chart/config/
##
## or multiple files:
## cp src/main/resources/*.json common-app-chart/config/
## 
configMapFile:

## @param extraVolumes - Array to add extra volumes. Requires setting `extraVolumeMounts`
## For example:
## extraVolumes:
##   - name: assets
##     persistentVolumeClaim:
##       claimName: assets-pvc
extraVolumes:

## @param extraVolumeMounts - Array to add extra mounts. Normally used with `extraVolumes`
## For example:
## extraVolumeMounts:
##   - name: assets
##     mountPath: /tmp/assets
extraVolumeMounts:

## @param hostAliases - Add deployment host aliases
##
hostAliases: []

## @param updateStrategy.type - Set up update strategy for deploy.
## Example:
## updateStrategy:
##   type: RollingUpdate
##   rollingUpdate:
##     maxSurge: 25%
##     maxUnavailable: 25%
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

## @param sidecars - Attach additional containers to the pod
## e.g.
## - name: your-image-name
##   image: your-image
##   imagePullPolicy: Always
##   ports:
##   - name: portname
##     containerPort: 1234
##
sidecars:

## @param initContainers - Add additional init containers to the pod
## e.g.
## - name: your-image-name
##   image: your-image
##   imagePullPolicy: Always
##   ports:
##   - name: portname
##     containerPort: 1234
##
initContainers:

## Autoscaling parameters
## @param autoscaling.enabled Enable autoscaling for app deployment
## @param autoscaling.minReplicas Minimum number of replicas to scale back
## @param autoscaling.maxReplicas Maximum number of replicas to scale out
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: ""
  maxReplicas: ""
  targetCPU: ""
  targetMemory: ""

##  Prometheus Metrics configuration
##
metrics:
  ## @param metrics.enabled Enable Prometheus to access metrics endpoint
  ##
  enabled: false
  ## @param metrics.containerPort ZooKeeper Prometheus Exporter container port
  ##
  containerPort: 8081
  ## Service configuration
  ##
  service:
    ## @param metrics.service.type Prometheus service type
    ##
    type: ClusterIP
    ## @param metrics.service.port Prometheus service port
    ##
    port: 8081
    ## @param metrics.service.targetPort Prometheus service target port (container port name)
    ##
    targetPort: metrics
    ## @param metrics.service.annotations [object] Annotations for Prometheus to auto-discover the metrics endpoint
    ##
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.port }}"
      prometheus.io/path: "/metrics"
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.path Scrape path for the ServiceMonitor Resource (defaults to the /metrics )
    ##
    path: "/metrics"
    ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    interval: ""
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
    ##
    additionalLabels: {}
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector: {}
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
  ## Sloth PrometheusServiceLevel Resource
  ##
  sloth:
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
    ##
    namespace: ""
    ## @param metrics.sloth.additionalLabels Additional labels that can be used so PrometheusServiceLevel will be discovered by Prometheus
    ##
    additionalLabels: {}
      # release: prometheus
    ## @param
    ##
    slos: []
      # - name: "Availability"
      #   objective: 95
      #   description: "Common SLO based on availability for HTTP request responses."
      #   sli:
      #     events:
      #       errorQuery: sum(rate(http_server_requests_seconds_count{service="{{ .Values.nameOverride }}-metrics",code=~"(5..|429)"}[{{.window}}]))
      #       totalQuery: sum(rate(http_server_requests_seconds_count{service="{{ .Values.nameOverride }}-metrics"}[{{.window}}]))
      #   alerting:
      #     name: ServiceHighErrorRate
      #     labels:
      #       category: "availability"
      #     annotations:
      #       summary: "High error rate requests responses"
      #     pageAlert:
      #       disable: true
      #     ticketAlert:
      #       disable: true


## Argo Rollouts configurations
## ref: 
##
argocd:
  rollouts:
    enabled: false
    ## @param rollout.updateStrategy.type - Set up update strategy for deploy.
    ## Example:
    #updateStrategy:
    #  canary:
    #    steps:
    #    - setWeight: 5
    #    - pause:
    #        duration: 5m
    #    trafficRouting:
    #      istio:
    #        destinationRule:
    #          canarySubsetName: canary
    #          name: example-dr
    #          stableSubsetName: stable
    #       virtualService:
    #          name: example-dr
    #          routes:
    #          - primary
    updateStrategy:
      canary:
        steps:
        - setWeight: 5
        - pause:
            duration: 5m
        trafficRouting:
          istio:
            destinationRule:
              name: example-dr
              canarySubsetName: canary
              stableSubsetName: stable
            virtualService:
              name: example-vs
              routes:
              - hello-worlds


istio:

  ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#VirtualService
  ##
  virtualService:
    enabled: false

    ## @param virtualService.hosts list containing the destination hosts to which traffic is being sent. 
    ## Could be a DNS name with wildcard prefix or an IP address
    ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#VirtualService
    ## 
    hosts: []
    
    ## @param virtualService.gateways The names of gateways and sidecars that should apply these routes. 
    ## Gateways in other namespaces may be referred to by <gateway namespace>/<gateway name>; specifying a gateway with no namespace qualifier is the same as specifying the VirtualService’s namespace.
    ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#VirtualService
    ## 
    gateways: []


    ## @param virtualService.http An ordered list of route rules for HTTP traffic. 
    ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#HTTPRoute
    ## 
    http: []

    ## @param virtualService.tls An ordered list of route rule for non-terminated TLS & HTTPS traffic.
    ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#TLSRoute
    ## 
    tls: []

    ## @param virtualService.tcp An ordered list of route rules for opaque TCP traffic. 
    ## ref: https://istio.io/latest/docs/reference/config/networking/virtual-service/#TCPRoute
    ## 
    tcp: []

    ## @param virtualService.destinationRule.exportTo A list of namespaces to which this destination rule is exported
    ## The resolution of a destination rule to apply to a service occurs in the context of a hierarchy of namespaces. Exporting a destination rule allows it to be included in the resolution hierarchy for services in other namespaces. 
    ## This feature provides a mechanism for service owners and mesh administrators to control the visibility of destination rules across namespace boundaries.
    ## ref: https://istio.io/latest/docs/reference/config/networking/destination-rule/
    ## 
    exportTo: []
  
  ## ref: https://istio.io/latest/docs/reference/config/networking/destination-rule/
  ##
  destinationRule:
    enabled: false

    ## @param virtualService.destinationRule.trafficPolicy Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).
    ## ref: https://istio.io/latest/docs/reference/config/networking/destination-rule/#TrafficPolicy
    ## 
    trafficPolicy: {}

    ## @param virtualService.destinationRule.subsets One or more named sets that represent individual versions of a service. 
    ## Traffic policies can be overridden at subset level.
    ## ref: https://istio.io/latest/docs/reference/config/networking/destination-rule/#Subset
    ## 
    subsets: []

    ## @param virtualService.destinationRule.exportTo A list of namespaces to which this destination rule is exported
    ## The resolution of a destination rule to apply to a service occurs in the context of a hierarchy of namespaces. Exporting a destination rule allows it to be included in the resolution hierarchy for services in other namespaces. 
    ## This feature provides a mechanism for service owners and mesh administrators to control the visibility of destination rules across namespace boundaries.
    ## ref: https://istio.io/latest/docs/reference/config/networking/destination-rule/
    ## 
    exportTo: []

    ## @param virtualService.destinationRule.workloadSelector One or more labels that indicate a specific set of pods/VMs on which a policy should be applied. 
    ## The scope of label search is restricted to the configuration namespace in which the resource is present.
    ## ref: https://istio.io/latest/docs/reference/config/type/workload-selector/#WorkloadSelector
    ## e.g.
    ## app: foo
    ## component: backend
    ## 
    workloadSelector: {}

  ## ref: https://istio.io/latest/docs/reference/config/security/authorization-policy/
  ##
  authorizationPolicy:
    enabled: false

    ## @param virtualService.authorizationPolicy.selector The selector decides where to apply the authorization policy. 
    ## The selector will match with workloads in the same namespace as the authorization policy. 
    ## If the authorization policy is in the root namespace, the selector will additionally match with workloads in all namespaces.
    ## ref: https://istio.io/latest/docs/reference/config/type/workload-selector/#WorkloadSelector
    ## e.g.
    ## app: foo
    ## component: backend
    ## 
    selector: {}

    ## @param virtualService.authorizationPolicy.rules Rule matches requests from a list of sources that perform a list of operations subject to a list of conditions. 
    ## A match occurs when at least one source, one operation and all conditions matches the request. An empty rule is always matched.
    ## ref: https://istio.io/latest/docs/reference/config/security/authorization-policy/#Rule
    ## 
    rules: []

    ## @param virtualService.authorizationPolicy.action Action specifies the operation to take.
    ## ref: https://istio.io/latest/docs/reference/config/security/authorization-policy/#AuthorizationPolicy-Action
    ## e.g.
    ## action: ALLOW/DENY/AUDIT/CUSTOM
    ## 
    action:

    ## @param virtualService.authorizationPolicy.selector Specifies the name of the extension provider. 
    ## The list of available providers is defined in the MeshConfig. Note, currently at most 1 extension provider is allowed per workload. 
    ## Different workloads can use different extension provider.
    ## ref: https://istio.io/latest/docs/reference/config/security/authorization-policy/#AuthorizationPolicy-ExtensionProvider
    ## 
    provider:

  
  ## ref: https://istio.io/latest/docs/reference/config/security/peer_authentication/#PeerAuthentication-MutualTLS-Mode
  ##
  peerAuthentication:
    enabled: false

    ## @param virtualService.peerAuthentication.selector The selector decides where to apply the peer authentication. 
    ## The selector will match with workloads in the same namespace as the peer authentication. 
    ## If the peer authentication is in the root namespace, the selector will additionally match with workloads in all namespaces.
    ## ref: https://istio.io/latest/docs/reference/config/type/workload-selector/#WorkloadSelector
    ## e.g.
    ## app: foo
    ## component: backend
    ## 
    selector: {}

    ## @param virtualService.peerAuthentication.mtlsMode Mutual TLS settings for workload. If not defined, inherit from parent.
    ## ref: https://istio.io/latest/docs/reference/config/security/peer_authentication/#PeerAuthentication-MutualTLS-Mode
    ## e.g.
    ## UNSET - Inherit from parent, if has one. Otherwise treated as PERMISSIVE.
    ## DISABLE - Connection is not tunneled.
    ## PERMISSIVE - Connection can be either plaintext or mTLS tunnel.
    ## STRICT - Connection is an mTLS tunnel (TLS with client cert must be presented).
    mtlsMode:

    ## @param virtualService.peerAuthentication.portLevelMtls Port specific mutual TLS settings. 
    ## These only apply when a workload selector is specified.
    ## ref: https://istio.io/latest/docs/reference/config/security/peer_authentication/#PeerAuthentication-MutualTLS-Mode
    ## e.g.
    portLevelMtls: {}


## @param extraDeploy - Generate additional kubernetes manifests
## e.g.
## net-pol: |-
##   apiVersion: networking.k8s.io/v1
##   kind: NetworkPolicy
##   metadata:
##     name: {{ .Release.Namespace | quote }}
##     namespace: {{ .Release.Namespace | quote }}
##   spec:
##     podSelector:
##       matchLabels:
##         role: db
##     policyTypes:
##     - Ingress
##     - Egress
##     ingress:
##     - from:
##       - ipBlock:
##           cidr: 172.17.0.0/16
##           except:
##           - 172.17.1.0/24
##       - namespaceSelector:
##           matchLabels:
##             project: myproject
##       - podSelector:
##           matchLabels:
##             role: frontend
##       ports:
##       - protocol: TCP
##         port: 6379
##     egress:
##     - to:
##       - ipBlock:
##           cidr: 10.0.0.0/24
##       ports:
##       - protocol: TCP
##         port: 5978
extraDeploy: {}

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion:
